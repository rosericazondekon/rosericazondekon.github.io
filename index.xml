<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gbedegnon Roseric Azondekon</title><link>https://rosericazondekon.github.io/</link><description>Recent content on Gbedegnon Roseric Azondekon</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 01 Apr 2023 01:48:00 +0800</lastBuildDate><atom:link href="https://rosericazondekon.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>RNA-seq Read Alignment and Quantification</title><link>https://rosericazondekon.github.io/posts/rnaseq-read-align-quant/</link><pubDate>Sat, 18 Dec 2021 08:23:28 +0800</pubDate><guid>https://rosericazondekon.github.io/posts/rnaseq-read-align-quant/</guid><description>Disclaimer: This tutorial was originally written on March 26, 2019.
Introduction In this tutorial, I show you how to download raw sequence data from the European instance of the SRA, which can be accessed via https://www.ebi.ac.uk/ena. At ENA, the sequencing reads are directly available in FASTQ or SRA formats, which will be explained below.
For this tutorial, we need FastQC, multiQC, the SRA toolkit, the subread package, a powerful suite of tools designed to interact with SAM and BAM files called samtools, salmon, and STAR installed and referenced in the environment variable PATH.</description></item><item><title>Differential Gene Expression Analysis</title><link>https://rosericazondekon.github.io/posts/differential-gene-expression/</link><pubDate>Thu, 23 Dec 2021 00:30:00 +0800</pubDate><guid>https://rosericazondekon.github.io/posts/differential-gene-expression/</guid><description>Disclaimer: This tutorial was originally written on April 01, 2019.
Introduction In a previous tutorial, we showed you how to download and process RNA-seq FASTQ files for read alignment on a reference sequence, and for read quantification. In this tutorial, we show you how to conduct Differential Gene Expression (DGE) analysis using the DESeq2, edgeR, and limma packages.
We set our working directory to the tuto folder created in our first tutorial.</description></item><item><title>Bisulfite Treated Sequence Read Alignment</title><link>https://rosericazondekon.github.io/posts/bisulfite-treated-read-align/</link><pubDate>Sat, 08 Jan 2022 13:08:00 +0800</pubDate><guid>https://rosericazondekon.github.io/posts/bisulfite-treated-read-align/</guid><description>Disclaimer: This tutorial was originally written on May 30, 2019.
Introduction In this tutorial, we show you how to download raw Bisulfite-seq DNA methylation sequence data from the European instance of the SRA, which can be accessed via https://www.ebi.ac.uk/ena. On the European Nucleotide Archive (ENA) website, the sequencing reads are directly available in FASTQ or SRA formats, which will be explained below.
For this tutorial, we need FastQC, multiQC, the SRA toolkit, a powerful suite of tools designed to interact with SAM and BAM files called samtools, and the Bismark aligner to align the Bisulfite-seq reads to the reference genome.</description></item><item><title>Bisulfite Treated DNA Methylation Analysis</title><link>https://rosericazondekon.github.io/posts/bsseq-dna-methylation-analysis/</link><pubDate>Sat, 22 Jan 2022 12:56:00 +0800</pubDate><guid>https://rosericazondekon.github.io/posts/bsseq-dna-methylation-analysis/</guid><description>Disclaimer: This tutorial was originally written on June 06, 2019.
Introduction In a previous tutorial, we showed you how to download and process Bisulfite-treated sequence DNA methylation FASTQ files for read alignment on a reference sequence. In this tutorial, we show you how to run DNA methylation analysis using the Bioconductor bsseq and dmrseq R packages.
We set our working directory to the tuto folder created in our previous tutorial.</description></item><item><title>DNA Methylation Analysis using methylKit</title><link>https://rosericazondekon.github.io/posts/methylkit-dna-methylation-analysis/</link><pubDate>Sat, 05 Feb 2022 11:47:00 +0800</pubDate><guid>https://rosericazondekon.github.io/posts/methylkit-dna-methylation-analysis/</guid><description>Disclaimer: This tutorial was originally written on June 04, 2019.
Introduction In our DNA Methylation Sequence Read Alignment tutorial, we showed you how to download and process Bisulfite-treated sequence DNA methylation FASTQ files for read alignment on a reference sequence. In this tutorial, we show you how to run DNA methylation analysis using the Bioconductor methylKit R package.
We set our working directory to the tuto folder created in a previous tutorial.</description></item><item><title>Mosquito Species Image Classification using the torch R package</title><link>https://rosericazondekon.github.io/posts/mosquito-image-classification-with-torch/</link><pubDate>Sat, 01 Apr 2023 01:48:00 +0800</pubDate><guid>https://rosericazondekon.github.io/posts/mosquito-image-classification-with-torch/</guid><description>In this tutorial, we will build an image classification Deep Learning model using the torch R package. The dataset for this tutorial is the Dataset of Vector Mosquito Images published by Pise and contributors in Mendeley Data (DOI:10.17632/88s6fvgg2p.4). We downloaded the Mosquito Images Augmented.zip for the purposes of this tutorial.
By the end of this tutorial, you should be able to:
load and preprocess your own images into torch tensors import a prebuilt Artificial Neural Network architecture fit an Artificial Neural Network model to your data evaluate a deep learning model and draw inference on a new image (predict a mosquito specie from an image) deploy the image classification model as a shiny app This tutorial is inspired by the Classifying images with torch tutorial by Sigrid Keydana.</description></item><item><title>AuthorVis</title><link>https://rosericazondekon.github.io/projects/auhorvis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosericazondekon.github.io/projects/auhorvis/</guid><description>AuthorVis is a co-authorship network exploration, and link prediction tool specific to the scientific collaborative research network of Malaria, Tuberculosis and HIV/AIDS in the Republic of Benin. This project is the result of an extensive study of co-authorship network entitled &amp;ldquo;Network Analysis of Scientific Collaboration and Co-authorship of the Trifecta of Malaria, Tuberculosis and HIV/AIDS in Benin.&amp;rdquo;
While many network visualization solutions have already been published, most of them are not specifically adapted to co-authorship network.</description></item><item><title>Global Vaccination Survey Analyzer</title><link>https://rosericazondekon.github.io/projects/gvsa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosericazondekon.github.io/projects/gvsa/</guid><description>The Global Vaccination Survey Analyzer (GVSA) is a standardized tool to support the analysis of vaccination survey data among displaced populations. I developed the GVSA as a standalone shiny application for the CDC with the support of the UNHCR.
It enables users to easily review vaccination surveys conducted in displaced populations, automatically analyze, visualize vaccination survey results in easy to read dashboards, and generate downloadable reports.
The application can be used to analyze surveys evaluating coverage of both Supplemental Immunization Activities (SIAs), and Routine Immunization (RI) in acute and proctrated humanitarian settings.</description></item><item><title>Integrated RNA-seq Analysis Application</title><link>https://rosericazondekon.github.io/projects/irnaa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosericazondekon.github.io/projects/irnaa/</guid><description>The Integrated RNA-seq Analysis Application (IRNAA) is a shiny application built for the purpose of facilitating Differential Gene Expression (DGE) analysis. IRNAA integrates command line tools such as salmon, fastQC, multiQC with DGE R packages such as DESeq2, edgeR, and limma-voom, and hides all the abstractions and coding hurdles from the end user.
IRNAA makes it possible for the user to either preprocess fastq files and import read counts into the application from the fastq preprocessed files, or directly import their read counts into the application, or import RNA-seq datasets directly from the The Cancer Genome Atlas (TCGA).</description></item><item><title>kdtEstimator</title><link>https://rosericazondekon.github.io/projects/kdtestimator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosericazondekon.github.io/projects/kdtestimator/</guid><description>The kdtEstimator is a small Shiny application designed specifically for the estimation of Knock-Down Time based on aggregated WHO or CDC bottle Bioassay data. The application is primarily dedicated to Entomologists interested in the study of vector resistance to insecticides.
Other scientists interested in the estimation of measures like Lethal Dose 50 (LD50) or Lethal Concentration (LC50) may also use it.
Release date: May, 2018 Try it live here! Source code</description></item><item><title>Rnssp R Markdown Documentation</title><link>https://rosericazondekon.github.io/projects/rnssp_rmd_doc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosericazondekon.github.io/projects/rnssp_rmd_doc/</guid><description>This project maintains the online documentation of the Rnssp R Markdown Templates.
Release date: May, 2021 Online Documentation Source code</description></item><item><title>Rnssp R Markdown Templates</title><link>https://rosericazondekon.github.io/projects/rnssp_rmd_templates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosericazondekon.github.io/projects/rnssp_rmd_templates/</guid><description>
The Rnssp R Markdown Templates are extensions to the Rnssp R package. These templates are developed in collaboration with the members of the Community of Practice (CoP) and the National Syndromic Surveillance Program (NSSP).
The goal is to make a wide collection of report templates accessible and easily distributable via the Rnssp R package.
Release date: November, 2021 Online Documentation Source code</description></item><item><title>Rnssp R package</title><link>https://rosericazondekon.github.io/projects/rnssp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosericazondekon.github.io/projects/rnssp/</guid><description>The Rnssp R package is a catalog of data processing and analytics tools, templates, and functions commonly used across the National Syndromic and Surveillance Program (NSSP) at the Centers for Disease Control and Prevention (CDC). Its goal is to improve code reproducibility, standardize and document reusable functions, facilitate the sharing of routine reports across the NSSP Community of Practice (CoP), and better engage the NSSP CoP.
The NSSP is a collaboration among CDC programs, federal partners, and local and state jurisdiction who participatein an active CoP.</description></item><item><title>The `pynssp` Python package</title><link>https://rosericazondekon.github.io/projects/pynssp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosericazondekon.github.io/projects/pynssp/</guid><description>pynssp is a Python package for the National Syndromic Surveillance Program (NSSP) and its Community of Practice. A collection of classes and methods to advance the practice of Syndromic Surveillance. This python package serves as a Python alternative to the Rnssp R package.
The NSSP is a collaboration among CDC programs, federal partners, and local and state jurisdiction who participatein an active CoP. Various tools and analytical resources have been developed by the NSSP to assist partners across the CoP.</description></item><item><title>VirusSeq Pipeline</title><link>https://rosericazondekon.github.io/projects/virusseqpipeline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosericazondekon.github.io/projects/virusseqpipeline/</guid><description>The VirusSeq software is a next generation sequencing software of human cancer tissue. Its goal is to identify viruses and their integration sites in human cancer cells. VirusSeq was originally developed by Chen and collaborators and reported in a 2012 paper published in Bioinformatics.
Although the software is open source and freely available, its installation is not at the ease of the novice user. VirusSeq has not been designed to effectively and efficiently process multiple samples.</description></item></channel></rss>